name: On push

on: push

env:
  DEVELOPER_DIR: /Applications/Xcode_12.app/Contents/Developer

jobs:
  test:
    name: Test
    runs-on: macos-latest
    if: ${{ !contains(github.event.head_commit.message, '[clowntown]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-
      - uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-
      - name: Install
        run: |
          cp mock-Secrets.plist the-blue-alliance-ios/Secrets.plist
          bundle install
          bundle exec pod install --repo-update
          bundle exec fastlane run setup_ci
          bundle exec fastlane setup_secrets
        env:
          TBA_API_KEY: ${{ secrets.TBA_API_KEY }}
      - name: fastlane test
        run: bundle exec fastlane test

  publish-beta:
    name: Publish Beta
    runs-on: ubuntu-latest
    needs: [py3-type, py3-lint, py3-test]
    if: contains(github.event.commits[0].message, '[nodeploy]') == false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Setup Google Cloud Platform
        uses: google-github-actions/setup-gcloud@master
        with:
          version: "321.0.0"
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_AUTH }}
      - name: Deploy
        run: python3 ops/deploy/deploy_queues.py src/queue.yaml
